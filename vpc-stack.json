{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Creates a VPC with the CIDR: 10.0.1.0/24 and two Subnets that share the CIDR space equally among the them.",
	"Parameters": {
		"KeyName": {
			"Description": "The EC2 Key Pair to allow SSH access to the instances",
			"Type": "AWS::EC2::KeyPair::KeyName",
			"Default": "ec2-s3-rakesh",
			"ConstraintDescription": "must be the name of an existing EC2 KeyPair."
		}
	},
	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": "10.0.1.0/24",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					}
				]
			}
		},
		"Subnet01": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.0.1.0/25",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					}
				]
			}
		},
		"Subnet02": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.0.1.128/25",
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					}
				]
			}
		},
		"VPCInternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					}
				]
			}
		},
		"VPCAttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "VPCInternetGateway"
				}
			}
		},
		"VPCRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					}
				]
			}
		},
		"VPCRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "VPCAttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "VPCRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "VPCInternetGateway"
				}
			}
		},
		"VPCSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "Subnet01"
				},
				"RouteTableId": {
					"Ref": "VPCRouteTable"
				}
			}
		},
		"VPCNetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					}
				]
			}
		},
		"VPCInboundHTTPNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "VPCNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "80",
					"To": "80"
				}
			}
		},
		"VPCInboundSSHNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "VPCNetworkAcl"
				},
				"RuleNumber": "101",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "22",
					"To": "22"
				}
			}
		},
		"VPCInboundResponsePortsNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "VPCNetworkAcl"
				},
				"RuleNumber": "102",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "1024",
					"To": "65535"
				}
			}
		},
		"VPCOutBoundHTTPNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "VPCNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "80",
					"To": "80"
				}
			}
		},
		"VPCOutBoundHTTPSNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "VPCNetworkAcl"
				},
				"RuleNumber": "101",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "443",
					"To": "443"
				}
			}
		},
		"VPCOutBoundResponsePortsNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "VPCNetworkAcl"
				},
				"RuleNumber": "102",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "1024",
					"To": "65535"
				}
			}
		},
		"VPCSubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "Subnet01"
				},
				"NetworkAclId": {
					"Ref": "VPCNetworkAcl"
				}
			}
		}
	}
}
